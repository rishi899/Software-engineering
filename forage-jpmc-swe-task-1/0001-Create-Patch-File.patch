From f8a6030942dde8ad60cd2297cb4b4ae77a338c0a Mon Sep 17 00:00:00 2001
From: RISHI <m.rishi2003gmail.com>
Date: Wed, 3 Jul 2024 01:43:07 +0530
Subject: [PATCH] Create Patch File

---
 client3.py     | 11 ++++++++---
 client_test.py | 19 +++++++++++++++++++
 2 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..55b0944 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,17 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price+ask_price)/2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
+    if(price_b==0):
+        return
+    
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    return price_a/price_b
 
 
 # Main
@@ -52,8 +55,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices={}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock]=price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(price["ABC"], price["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..1039157 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,14 +8,33 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      expected = {
+        'stock': quote['stock'],
+        'top_bid_price': quote['top_bid']['price'],
+        'top_ask_price': quote['top_ask']['price'],
+        'price': (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+    }
+    self.assertEqual(getDataPoint(quote), expected)
 
+    
+       
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+     expected = {
+        'stock': quote['stock'],
+        'top_bid_price': quote['top_bid']['price'],
+        'top_ask_price': quote['top_ask']['price'],
+        'price': (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+    }
+    self.assertEqual(getDataPoint(quote), expected)
 
+    
 
   """ ------------ Add more unit tests ------------ """
 
-- 
2.44.0.windows.1

